<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.eobjects.datacleaner</groupId>
		<artifactId>DataCleaner</artifactId>
		<version>3.0-SNAPSHOT</version>
	</parent>
	<artifactId>DataCleaner-monitor</artifactId>
	<packaging>war</packaging>
	<name>DataCleaner-monitor</name>

	<properties>
		<gwt.version>2.4.0</gwt.version>
		<spring.version>3.1.1.RELEASE</spring.version>
		<camel.version>2.9.2</camel.version>
	</properties>

	<build>
		<finalName>DataCleaner-monitor</finalName>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.2</version>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>${gwt.version}</version>
				<configuration>
					<runTarget>org.eobjects.datacleaner.monitor.DataCleanerWebMonitor/index.html</runTarget>
					<hostedWebapp>${project.build.directory}/${project.build.finalName}</hostedWebapp>
				</configuration>
				<executions>
					<execution>
						<!-- GWT plugin, used to compile JavaScript -->
						<id>gwt-compile</id>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<!-- Run GwtTestCases with the gwt driver -->
						<id>gwt-test</id>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<includes>**/GwtTest*.java</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- Use eclipse:eclipse to set up GWT, Maven and eclipse -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<additionalprojectnatures>
						<projectnature>org.maven.ide.eclipse.maven2Nature</projectnature>
					</additionalprojectnatures>
					<additionalbuildcommands>
						<buildcommand>org.maven.ide.eclipse.maven2Builder</buildcommand>
					</additionalbuildcommands>
				</configuration>
			</plugin>

			<plugin>
				<!-- Exclude/skip this module when deploying artifacts -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>

			<plugin>
				<!-- Delete directories created by GWT eclipse plugin on clean -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/webapp/log</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
						<fileset>
							<directory>src/main/webapp/timeline</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
						<fileset>
							<directory>src/main/webapp/scheduling</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
						<fileset>
							<directory>src/main/webapp/WEB-INF/deploy</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
						<fileset>
							<directory>src/main/gwt-unitCache</directory>
							<followSymlinks>false</followSymlinks>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

			<plugin>
				<!-- Don't run GwtTestCases with regular unittest driver -->
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/*GwtTest.java</exclude>
					</excludes>
				</configuration>
			</plugin>

			<plugin>
				<groupId>com.sun.tools.xjc.maven2</groupId>
				<artifactId>maven-jaxb-plugin</artifactId>
				<version>1.1.1</version>
				<executions>
					<execution>
						<id>timeline-jaxb-source</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<phase>generate-sources</phase>
						<configuration>
							<generateDirectory>${project.build.directory}/generated/timeline-src</generateDirectory>
							<generatePackage>org.eobjects.datacleaner.timeline.jaxb</generatePackage>
							<includeSchemas>
								<includeSchema>**/timeline.xsd</includeSchema>
							</includeSchemas>
							<includeBindings>
								<includeBinding>*.xjb</includeBinding>
							</includeBindings>
							<forceRegenerate>false</forceRegenerate>
							<removeOldOutput>true</removeOldOutput>
							<strict>true</strict>
							<verbose>true</verbose>
						</configuration>
					</execution>
					<execution>
						<id>schedule-jaxb-source</id>
						<goals>
							<goal>generate</goal>
						</goals>
						<phase>generate-sources</phase>
						<configuration>
							<generateDirectory>${project.build.directory}/generated/schedule-src</generateDirectory>
							<generatePackage>org.eobjects.datacleaner.schedule.jaxb</generatePackage>
							<includeSchemas>
								<includeSchema>**/schedule.xsd</includeSchema>
							</includeSchemas>
							<includeBindings>
								<includeBinding>*.xjb</includeBinding>
							</includeBindings>
							<forceRegenerate>false</forceRegenerate>
							<removeOldOutput>true</removeOldOutput>
							<strict>true</strict>
							<verbose>true</verbose>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated/timeline-src</source>
								<source>${project.build.directory}/generated/schedule-src</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<version>2.0-beta-1</version>
				<executions>
					<execution>
						<id>tomcat-run</id>
						<goals>
							<goal>exec-war-only</goal>
						</goals>
						<phase>package</phase>
						<configuration>
							<path>/DataCleaner-monitor</path>
							<extraDependencies>
								<!-- Default database drivers -->
								<dependency>
									<groupId>postgresql</groupId>
									<artifactId>postgresql</artifactId>
									<version>9.1-901-1.jdbc4</version>
								</dependency>
								<dependency>
									<groupId>mysql</groupId>
									<artifactId>mysql-connector-java</artifactId>
									<version>5.1.18</version>
								</dependency>
								<dependency>
									<groupId>net.sourceforge.jtds</groupId>
									<artifactId>jtds</artifactId>
									<version>1.2.4</version>
								</dependency>
							</extraDependencies>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											com.sun.tools.xjc.maven2
										</groupId>
										<artifactId>
											maven-jaxb-plugin
										</artifactId>
										<versionRange>
											[1.1.1,)
										</versionRange>
										<goals>
											<goal>generate</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<repositories>
		<repository>
			<!-- Up-to-date GWT visualization is not available in central repo. Using 
				alfresco instead. -->
			<id>alfresco-repository</id>
			<url>http://maven.alfresco.com/nexus/content/repositories/activiti-thirdparty/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<!-- DataCleaner dependencies -->
		<dependency>
			<groupId>org.eobjects.datacleaner</groupId>
			<artifactId>DataCleaner-core</artifactId>
			<version>${project.version}</version>
		</dependency>

		<!-- GWT -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwt.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwt.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt.google-apis</groupId>
			<artifactId>gwt-visualization</artifactId>
			<version>1.1.2</version>
		</dependency>

		<!-- Optional JDBC drivers -->
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.1-901-1.jdbc4</version>
			<optional>true</optional>
		</dependency>

		<!-- Middleware: Spring, Camel, Quartz -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-quartz</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.2</version>
		</dependency>

		<!-- JSF -->
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.faces</artifactId>
			<version>2.1.9</version>
		</dependency>
		<dependency>
			<groupId>javax.faces</groupId>
			<artifactId>javax.faces-api</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>javax.el</groupId>
			<artifactId>javax.el-api</artifactId>
			<version>2.2.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>el-impl</artifactId>
			<version>2.2</version>
			<scope>provided</scope>
		</dependency>

		<!-- Servlet+JSP dependencies -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.0</version>
			<scope>provided</scope>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty.aggregate</groupId>
			<artifactId>jetty-all</artifactId>
			<version>7.2.0.v20101020</version>
			<scope>test</scope>
		</dependency>

	</dependencies>
</project>