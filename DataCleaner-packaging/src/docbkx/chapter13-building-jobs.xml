<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.oasis-open.org/docbook/4.5"
	xsi:schemaLocation="http://www.oasis-open.org/docbook/4.5 http://www.oasis-open.org/docbook/xsd/4.5/docbook.xsd">

	<title>Building jobs</title>

	<section id="adding_components">
		<title>Adding components to the job</title>
		<para>There are three kinds of components that you can add to your
			job:</para>
		<orderedlist>
			<listitem>
				<para>
					<emphasis>Analyzers</emphasis>
					, which are the most important components. Actually, without at
					least one analyzer the job will not run. An analyzer is a component
					that inspects the data that it receives and generates a result or a
					report. The majority of the data profiling cruft is created as
					analyzers.
				</para>
			</listitem>
			<listitem>
				<para>
					<emphasis>Transformers</emphasis>
					are components used to modify the data before analyzing it.
					Sometimes it's nescesary to extract parts of a value or combine two
					values to correctly get an idea about a particular measure. In
					other scenarios, transformers can be used to perform reference data
					lookups or other similar tasks and place the results of an
					operation into the stream of data in the job.
				</para>
				<para>
					The result of a transformer is a set of output columns. These
					columns work excactly like regular columns in your job, except that
					they have a preceeding step in the flow before they become
					materialized.
				</para>
			</listitem>
			<listitem>
				<para>
					<emphasis>Filters</emphasis>
					are components that split the flow of processing in a job. A filter
					will have a number of possible outcomes and depending on the
					outcome of a filter, a particular row might be processed by
					different sub-flows. Filters are often used simply to disregard
					certain rows from the analysis, eg. null values or values outside
					the range of interest.
				</para>
			</listitem>
		</orderedlist>
		<para>Each of these components have "Add" buttons that are used to add
			them to the job. Analyzers and transformers are added by clicking
			their respective buttons in the top of the screen. Each of these
			components will get their own tab, from where you can configure them.
			Filters are added and configured in the "Filters" tab.</para>
	</section>

	<section id="wiring_components">
		<title>Wiring components together</title>
		<para>Simply adding a transformer or filter actually doesn't change
			your job as such! This is because these components only have an
			impact if you wire them together somehow.</para>
		<para>To wire a transformer you simply need to use it's output column.
			DataCleaner will automatically build the flow so that a transformer
			is executed before components that depend on it's output columns.
		</para>
		<para>To wire a filter you need to set up a dependency on either of
			it's outcomes. All components have a button for selecting filter
			outcomes in their top-right corners. Click this button to select a
			filter outcome to depend on. If you have multiple filters you can
			chain these simply by having dependent outcomes of the individual
			filters.</para>
		<para>To get an overview of your current job flow, you can click the
			"Visualize" button, which will present the job's contents in an
			interactive flow
			diagram:</para>
		<mediaobject>
			<imageobject>
				<imagedata fileref="visalize_job.png" format="PNG" />
			</imageobject>
		</mediaobject>
	</section>

	<section id="executing">
		<title>Executing jobs</title>
		<para>TODO</para>
	</section>

	<section id="saving_and_opening_jobs">
		<title>Saving and opening jobs</title>
		<para>TODO</para>
	</section>

	<section id="template_jobs">
		<title>Template jobs</title>
		<para>DataCleaner contains a feature where you can reuse a job for
			multiple datastores or just multiple columns in the same datastore.
			We call this feature 'template jobs'.</para>
		<para>When opening a job you are presented with a file chooser. When
			you select a job file a panel will appear, containing some
			information about the job as well as available actions:</para>
		<mediaobject>
			<imageobject>
				<imagedata fileref="template_job_01_filechooser.jpg"
					format="JPG" />
			</imageobject>
		</mediaobject>
		<para>If you click the 'Open as template' button you will be presented
			with a dialog where you can map the job's original columns to a new
			set of columns:</para>
		<mediaobject>
			<imageobject>
				<imagedata fileref="template_job_02_mapping.jpg" format="JPG" />
			</imageobject>
		</mediaobject>
		<para>First you need to specify the datastore to use. On the left side
			you see the name of the original datastore, but the job is not
			restricted to use only this datastore. Select a datastore from the
			list and the fields below for the columns will become active.</para>
		<para>Then you need to map individual columns. If you have two
			datastore that have the same column names, you can click the "Map
			automatically" button and they will be automatically assigned.
			Otherwise you need to map the columns from the new datastore's
			availabel columns.</para>
		<para>Finally your job may contain 'Job-level variables'. These are
			configurable properties of the job that you might also want to fill
			out.</para>
		<para>Once these 2-3 steps have been completed, click the "Open job"
			button, and DataCleaner will be ready for executing the job on a new
			set of columns!</para>
	</section>
</chapter>
