<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
				 http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
				http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring-2.9.0.xsd">

	<bean name="exampleJobDetail" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass"
			value="org.eobjects.datacleaner.monitor.scheduling.ExecuteJob" />
		<property name="jobDataAsMap">
			<map>
				<entry key="DataCleaner.tenant.id" value="DC" />
				<entry key="DataCleaner.job.name" value="product_profiling" />
			</map>
		</property>
		<property name="applicationContextJobDataKey" value="applicationContext" />
	</bean>

	<bean id="exampleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
		<!-- see the example of method invoking job above -->
		<property name="jobDetail" ref="exampleJobDetail" />
		<!-- 2 minute delay -->
		<property name="startDelay" value="120000" />
		<!-- repeat every 120 seconds -->
		<property name="repeatInterval" value="120000" />
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
		 		<ref bean="exampleTrigger" />
			</list>
		</property>
	</bean>

</beans>