<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.oasis-open.org/docbook/4.5" xmlns:xl="http://www.w3.org/1999/xlink"
	xsi:schemaLocation="http://www.oasis-open.org/docbook/4.5 http://www.oasis-open.org/docbook/xsd/4.5/docbook.xsd">

	<title>Configuration file</title>

	<chapterinfo>
		<para>
			In this chapter we go through the elements of a configuration
			file,
			<emphasis>conf.xml</emphasis>
			, making it possible (although optional) to change the
			static
			configuration and configure the environment of DataCleaner.
		</para>
		<para>
			Most of the elements in the configuration file is also editable
			within the Desktop application. It is however important to note that
			changes made in the GUI are not saved directly to the configuration
			file, but to the
			<emphasis>userpreferences.dat</emphasis>
			file. You can consider the
			relationship between the two files this
			way: The configuration file
			defines a static, unmodifyable prototype
			of the applications
			environment. All
			customizations made to this
			prototype in the Desktop application is saved in
			the
			userpreferences.dat file.
		</para>
	</chapterinfo>

	<section>
		<title>XML schema</title>
		<para>The configuration file (conf.xml) is an XML file pertaining to
			the XML namespace
			"http://eobjects.org/analyzerbeans/configuration/1.0".</para>
		<para>
			For XML-savvy readers, who prefer to use XML schema aware editors to
			edit their XML files, you can find the XML schema for this namespace
			here:
			<link
				xl:href="http://eobjects.org/svn/AnalyzerBeans/trunk/src/main/resources/configuration.xsd">http://eobjects.org/svn/AnalyzerBeans/trunk/src/main/resources/configuration.xsd
			</link>
			.
		</para>
	</section>

	<section>
		<title>Datastores</title>
		<para>Datastores can be configured in the configuration file under
			the
			element &lt;datastore-catalog&gt;. The following sections will go
			into further details with particular types of datastores.</para>
	</section>

	<section>
		<title>Database (JDBC) connections</title>

		<para>Here are a few examples of common database types.</para>

		<tip>
			<para>The DataCleaner User Interface makes it a lot easier to figure
				out the
				url (connection string) and driver class part of the
				connection
				properties. It's a good place to start if you don't know
				these
				properties already.</para>
		</tip>

		<para>MySQL</para>
		<programlisting lang="xml">
			&lt;jdbc-datastore&#160;name="MySQL&#160;datastore"&gt;
			&#160;&lt;url&gt;jdbc:mysql://hostname:3306/database&lt;/url&gt;
			&#160;&lt;driver&gt;com.mysql.jdbc.Driver&lt;/driver&gt;
			&#160;&lt;username&gt;username&lt;/username&gt;
			&#160;&lt;password&gt;password&lt;/password&gt;
			&lt;/jdbc-datastore&gt; </programlisting>

		<para>Oracle</para>
		<programlisting lang="xml">
			&lt;jdbc-datastore&#160;name="Oracle&#160;datastore"&gt;
			&#160;&lt;url&gt;jdbc:oracle:thin:@hostname:1521:sid&lt;/url&gt;
			&#160;&lt;driver&gt;oracle.jdbc.OracleDriver&lt;/driver&gt;
			&#160;&lt;username&gt;username&lt;/username&gt;
			&#160;&lt;password&gt;password&lt;/password&gt;
			&lt;/jdbc-datastore&gt; </programlisting>

		<para>Microsoft SQL Server</para>
		<programlisting lang="xml">
			&lt;jdbc-datastore&#160;name="MS&#160;SQL&#160;Server&#160;datastore"&gt;
			&#160;&lt;url&gt;jdbc:jtds:sqlserver://hostname/database;useUnicode=true;characterEncoding=UTF-8&lt;/url&gt;
			&#160;&lt;driver&gt;net.sourceforge.jtds.jdbc.Driver&lt;/driver&gt;
			&#160;&lt;username&gt;username&lt;/username&gt;
			&#160;&lt;password&gt;password&lt;/password&gt;
			&lt;/jdbc-datastore&gt; </programlisting>
	</section>

	<section>
		<title>Comma-Separated Values (CSV) files</title>
		<para>This is an example of a CSV file datastore</para>
		<programlisting>
			&lt;csv-datastore&#160;name="my_csv_file"&gt;
			&#160;&lt;filename&gt;/path/to/file.csv&lt;/filename&gt;
			&#160;&lt;quote-char&gt;"&lt;/quote-char&gt;
			&#160;&lt;separator-char&gt;;&lt;/separator-char&gt;
			&#160;&lt;encoding&gt;UTF-8&lt;/encoding&gt;
			&lt;/csv-datastore&gt;
		</programlisting>
	</section>

	<section>
		<title>Excel spreadsheets</title>
		<para>This is an example of a Excel spreadsheet datastore</para>
		<programlisting>
			&lt;excel-datastore&#160;name="my_excel_spreadsheet"&gt;
			&#160;&lt;filename&gt;/path/to/file.xls&lt;/filename&gt;
			&lt;/excel-datastore&gt; </programlisting>
	</section>

	<section>
		<title>Reference data</title>
		<para>Reference data are defined in the configuration file in the
			element &lt;reference-data-catalog&gt;.</para>
	</section>

	<section>
		<title>Task runner</title>
		<para>The task runner defines how DataCleaner's will engine will
			execute the tasks of an analysis job. Typically you shouldn't edit
			this element. However, here are the two options:</para>
		<programlisting>&lt;multithreaded-taskrunner max-threads="30" /&gt;
		</programlisting>
		<para>Defines a multi threaded task runner with a thread pool of 30
			available threads. Beware that although 30 might seem like a high
			number that too small a pool of threads might cause issues because
			some tasks schedule additional tasks and thus there's a risk of dead
			lock when thread count is very low.</para>

		<programlisting>&lt;singlethreaded-taskrunner /&gt;</programlisting>
		<para>Defines a single threaded task runner. On legacy hardware or
			operating systems this setting will be better, but it will not take
			advantage of the multi threading capabilities of modern architecture.
		</para>
	</section>

	<section>
		<title>Storage provider</title>
		<para>The storage provider is used for storing temporary data used
			while executing an analysis job. There are two types of storage:
			Large collections of (single) values and
			"annotated rows", ie. rows
			that have been marked with a specific
			category which
			will be of
			interest to the user.</para>
		<para>To explain the storage provider configuration let's look at the
			default element:</para>
		<programlisting>
			&lt;storage-provider&gt;
			&#160;&lt;combined&gt;
			&#160;&#160;&lt;collections-storage&gt;
			&#160;&#160;&#160;&lt;berkeley-db/&gt;
			&#160;&#160;&lt;/collections-storage&gt;
			&#160;&#160;&lt;row-annotation-storage&gt;
			&#160;&#160;&#160;&lt;in-memory&#160;max-rows-threshold="1000"/&gt;
			&#160;&#160;&lt;/row-annotation-storage&gt;
			&#160;&lt;/combined&gt;
			&lt;/storage-provider&gt; </programlisting>
		<para>
			The element defines a combined storage strategy.
		</para>
		<para>
			Collections are stored using berkeley-db, an embedded database
			by Oracle. This is the recommended strategy for collections.
		</para>
		<para>
			Row annotations are stored in memory. There's a threshold of
			1000 rows which means that if more than 1000 records are annotated
			with the same category then additional records will not be saved (and
			thus is not viewable by the user). Most user scenarios will not
			require more than max. 1000 annotated records for inspection, but if
			this is really nescesary a different strategy can be pursued:
		</para>

		<sect2>
			<title>Using MongoDB for annotated rows</title>
			<para>
				If you have a local
				<link xl:href="http://www.mongodb.org/">MongoDB</link>
				instance, you can use this as a store for annotated rows. This is
				how the configuration looks like:
			</para>
			<programlisting>
				&#160;&#160;&lt;row-annotation-storage&gt;
				&#160;&#160;&#160;&lt;custom-storage-provider&#160;class-name="org.eobjects.analyzer.storage.MongoDbStorageProvider"/&gt;
				&#160;&#160;&lt;/row-annotation-storage&gt; </programlisting>
			<para>The MongoDB storage provider solution has shown very good
				performance metrics, but does add more complexity to the
				installation, which is why it is still considered experimental and
				only for savvy users.</para>
		</sect2>
	</section>
</chapter>