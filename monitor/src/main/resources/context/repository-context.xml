<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
				http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">

	<bean name="repository"
		class="org.eobjects.datacleaner.repository.file.FileRepository">
		<constructor-arg type="java.io.File" value="repository" />
	</bean>

	<!-- Development mode launch artifact provider. Will only work if dev mode 
		finds JAR files in directories relative to the build structure. -->
	<bean name="launchArtifactProvider"
		class="org.eobjects.datacleaner.monitor.server.DevModeLaunchArtifactProvider" />

	<!-- Example launch artifact provider based on external folder -->
	<!-- <bean name="launchArtifactProvider" class="org.eobjects.datacleaner.monitor.server.FileFolderLaunchArtifactProvider"> -->
	<!-- <constructor-arg type="java.io.File" value="C:\dev\eclipse\workspace\DataCleaner\packaging\target\jnlp"/> -->
	<!-- </bean> -->

	<bean name="configurationCache"
		class="org.eobjects.datacleaner.monitor.configuration.ConfigurationCache">
		<constructor-arg name="repository" ref="repository" />
	</bean>

	<bean name="tenantContextFactory"
		class="org.eobjects.datacleaner.monitor.configuration.TenantContextFactoryImpl">
		<constructor-arg name="repository" ref="repository" />
		<constructor-arg name="configurationCache" ref="configurationCache" />
	</bean>

	<bean name="timelineService"
		class="org.eobjects.datacleaner.monitor.server.TimelineServiceImpl">
		<constructor-arg name="repository" ref="repository" />
		<constructor-arg name="tenantContextFactory" ref="tenantContextFactory" />
	</bean>

</beans>