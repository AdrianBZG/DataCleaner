<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.eobjects.datacleaner</groupId>
		<artifactId>DataCleaner</artifactId>
		<version>2.4.2-SNAPSHOT</version>
	</parent>
	<artifactId>DataCleaner-packaging</artifactId>
	<packaging>jar</packaging>
	<name>DataCleaner-packaging</name>
	<properties>
		<mainClass>org.eobjects.datacleaner.Main</mainClass>
	</properties>
	<build>
		<finalName>DataCleaner</finalName>
		<plugins>
			<plugin>
				<!-- Exclude/skip this module when deploying artifacts -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<plugin>
				<!-- make the jar file executable when dependencies are available in 
					lib/ folder -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<addDefaultImplementationEntries>true
							</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true
							</addDefaultSpecificationEntries>
							<classpathPrefix>lib</classpathPrefix>
							<mainClass>${mainClass}</mainClass>
						</manifest>
						<manifestEntries>
							<SplashScreen-Image>images/splash.png</SplashScreen-Image>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<!-- Copy dependencies to lib/ folder -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<!-- Copy dependencies to lib/ -->
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<includeScope>runtime</includeScope>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<!-- Unpack resources for docbook XSLT generation -->
						<!-- See http://wiki.docbook.org/MavenDocBookXSL -->
						<id>unpack-shared-resources</id>
						<goals>
							<goal>unpack-dependencies</goal>
						</goals>
						<!-- linked with pre-site phase -->
						<phase>pre-site</phase>
						<configuration>
							<outputDirectory>${project.build.directory}/docbook-resources</outputDirectory>
							<includeGroupIds>net.sf.docbook</includeGroupIds>
							<includeArtifactIds>docbook-xsl</includeArtifactIds>
							<includeClassifiers>ns-resources</includeClassifiers>
							<excludeTransitive>true</excludeTransitive>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<!-- Assembly which creates the zip and tar.gz distributables -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/all.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<!-- Generate docbook documentation, see http://docbkx-tools.sourceforge.net/docbkx-maven-plugin/plugin-info.html -->
				<groupId>com.agilejava.docbkx</groupId>
				<artifactId>docbkx-maven-plugin</artifactId>
				<version>2.0.13</version>
				<executions>
					<execution>
						<!-- HTML (multi page) generation -->
						<id>reference-html-multi</id>
						<goals>
							<goal>generate-html</goal>
						</goals>
						<phase>site</phase>
						<configuration>
							<chunkedOutput>true</chunkedOutput>
							<chunkFirstSections>1</chunkFirstSections>
							<postProcess>
								<move todir="${project.basedir}/target/site/reference/html">
									<fileset dir="${project.basedir}/target/docbkx/html/index">
										<include name="**/*.html" />
									</fileset>
								</move>
								<copy todir="${project.basedir}/target/site/reference/html">
									<fileset dir="${project.basedir}/src/docbkx/resources">
										<include name="**/*.css" />
										<include name="**/*.png" />
										<include name="**/*.gif" />
										<include name="**/*.jpg" />
										<include name="**/*.htc" />
									</fileset>
								</copy>
							</postProcess>
						</configuration>
					</execution>
					<!-- HTML (single page) generation -->
					<execution>
						<id>reference-html-single</id>
						<goals>
							<goal>generate-html</goal>
						</goals>
						<phase>site</phase>
						<configuration>
							<chunkedOutput>false</chunkedOutput>
							<postProcess>
								<move file="${project.basedir}/target/docbkx/html/index.html"
									tofile="${project.basedir}/target/site/reference/html_single/index.html"
									failonerror="false" />
								<copy todir="${project.basedir}/target/site/reference/html_single">
									<fileset dir="${project.basedir}/src/docbkx/resources">
										<include name="**/*.css" />
										<include name="**/*.png" />
										<include name="**/*.gif" />
										<include name="**/*.jpg" />
									</fileset>
								</copy>
							</postProcess>
						</configuration>
					</execution>
					<!-- PDF generation -->
					<execution>
						<id>reference-pdf</id>
						<goals>
							<goal>generate-pdf</goal>
						</goals>
						<phase>site</phase>
						<configuration>
							<imgSrcPath>src/docbkx/resources/</imgSrcPath>
							<defaultImageWidth>15cm</defaultImageWidth>
							<postProcess>
								<copy todir="${project.basedir}/target/site/reference">
									<fileset dir="${project.basedir}/target/docbkx">
										<include name="**/*.pdf" />
									</fileset>
								</copy>
								<move file="${project.basedir}/target/site/reference/pdf/index.pdf"
									tofile="${project.basedir}/target/site/reference/pdf/datacleaner-reference.pdf"
									failonerror="false" />
							</postProcess>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.docbook</groupId>
						<artifactId>docbook-xml</artifactId>
						<version>4.4</version>
						<scope>runtime</scope>
					</dependency>
				</dependencies>
				<configuration>
					<includes>index.xml</includes>
					<xincludeSupported>true</xincludeSupported>
					<htmlStylesheet>style.css</htmlStylesheet>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>windows</id>
			<build>
				<plugins>
					<plugin>
						<!-- Create win32 executable -->
						<groupId>org.bluestemsoftware.open.maven.plugin</groupId>
						<artifactId>launch4j-plugin</artifactId>
						<version>1.5.0.0</version>
						<executions>
							<execution>
								<id>launch4j-gui</id>
								<phase>verify</phase>
								<goals>
									<goal>launch4j</goal>
								</goals>
								<configuration>
									<dontWrapJar>true</dontWrapJar>
									<headerType>gui</headerType>
									<jar>DataCleaner.jar</jar>
									<outfile>target/DataCleaner.exe</outfile>
									<errTitle>DataCleaner</errTitle>
									<priority>normal</priority>
									<downloadUrl>http://java.com/download</downloadUrl>
									<supportUrl>http://datacleaner.eobjects.org</supportUrl>
									<customProcName>true</customProcName>
									<stayAlive>false</stayAlive>
									<icon>src/main/assembly/app-icon.ico</icon>
									<jre>
										<path />
										<minVersion>1.6.0</minVersion>
										<maxVersion />
										<initialHeapSize>256</initialHeapSize>
										<maxHeapSize>1024</maxHeapSize>
									</jre>
								</configuration>
							</execution>
							<execution>
								<id>launch4j-cli</id>
								<phase>verify</phase>
								<goals>
									<goal>launch4j</goal>
								</goals>
								<configuration>
									<dontWrapJar>true</dontWrapJar>
									<headerType>console</headerType>
									<jar>DataCleaner.jar</jar>
									<outfile>target/DataCleaner-console.exe</outfile>
									<errTitle>DataCleaner</errTitle>
									<priority>normal</priority>
									<downloadUrl>http://java.com/download</downloadUrl>
									<supportUrl>http://datacleaner.eobjects.org</supportUrl>
									<customProcName>true</customProcName>
									<stayAlive>false</stayAlive>
									<icon>src/main/assembly/app-icon.ico</icon>
									<jre>
										<path />
										<minVersion>1.6.0</minVersion>
										<maxVersion />
										<initialHeapSize>256</initialHeapSize>
										<maxHeapSize>1024</maxHeapSize>
									</jre>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<!-- Assembly which creates the zip and tar.gz distributables -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.2</version>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/windows.xml</descriptor>
							</descriptors>
						</configuration>
						<executions>
							<execution>
								<phase>verify</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>jnlp</id>
			<build>
				<plugins>
					<plugin>
						<!-- Java Web start JNLP file generation -->
						<groupId>org.codehaus.mojo.webstart</groupId>
						<artifactId>webstart-maven-plugin</artifactId>
						<version>1.0-beta-1</version>
						<configuration>
							<templateFilename>template.vm</templateFilename>
							<jnlp>
								<outputFile>datacleaner.jnlp</outputFile>
								<mainClass>${mainClass}</mainClass>
							</jnlp>
							<outputJarVersions>false</outputJarVersions>
							<verbose>true</verbose>
						</configuration>
						<executions>
							<execution>
								<id>jnlp-on-verify</id>
								<goals>
									<goal>jnlp</goal>
								</goals>
								<phase>verify</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>macos</id>
			<build>
				<plugins>
					<plugin>
						<!-- build mac os x bundle -->
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>osxappbundle-maven-plugin</artifactId>
						<version>1.0-alpha-2</version>
						<configuration>
							<mainClass>${mainClass}</mainClass>
							<jvmVersion>1.6+</jvmVersion>
							<iconFile>${basedir}/src/main/macosx/app-icon.icns</iconFile>
							<bundleName>DataCleaner</bundleName>
							<vmOptions>-Dcom.apple.macos.useScreenMenuBar=true</vmOptions>
						</configuration>
						<executions>
							<!-- 32 bit mac build disabled, no longer common -->
							<!-- <execution> <id>build-mac-osx-bundle-32-bit</id> <phase>verify</phase> 
								<goals> <goal>bundle</goal> </goals> <configuration> <javaApplicationStub>${basedir}/src/main/macosx/JavaApplicationStub_32bit</javaApplicationStub> 
								<buildDirectory>${project.build.directory}/DataCleaner/macos-32bit/DataCleaner</buildDirectory> 
								<diskImageFile>${project.build.directory}/DataCleaner-32bit.dmg</diskImageFile> 
								</configuration> </execution> -->
							<execution>
								<id>build-mac-osx-bundle-64-bit</id>
								<phase>verify</phase>
								<goals>
									<goal>bundle</goal>
								</goals>
								<configuration>
									<javaApplicationStub>${basedir}/src/main/macosx/JavaApplicationStub_64bit</javaApplicationStub>
									<buildDirectory>${project.build.directory}/DataCleaner/macos-64bit/DataCleaner</buildDirectory>
									<diskImageFile>${project.build.directory}/DataCleaner-64bit.dmg</diskImageFile>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
	<repositories>
		<repository>
			<!-- Custom repository containing jar files that are not available via 
				any public maven repos -->
			<id>datacleaner-packaging-repo</id>
			<url>file://${basedir}/libext</url>
		</repository>
	</repositories>
	<dependencies>
		<dependency>
			<groupId>org.eobjects.datacleaner</groupId>
			<artifactId>DataCleaner-core</artifactId>
			<version>2.4.2-SNAPSHOT</version>
		</dependency>

		<!-- Extensions in libext -->
		<dependency>
			<groupId>com.hi.easydq</groupId>
			<artifactId>EasyDQ-cleansing-DataCleaner</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>com.hi.easydq</groupId>
			<artifactId>EasyDQ-dedup-DataCleaner</artifactId>
			<version>1.0</version>
		</dependency>

		<!-- Default database drivers -->
		<dependency>
			<groupId>com.oracle</groupId>
			<artifactId>ojdbc6</artifactId>
			<version>11.2.0.3</version>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.1-901.jdbc4</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.18</version>
		</dependency>
		<dependency>
			<groupId>net.sourceforge.jtds</groupId>
			<artifactId>jtds</artifactId>
			<version>1.2.4</version>
		</dependency>
	</dependencies>
</project>