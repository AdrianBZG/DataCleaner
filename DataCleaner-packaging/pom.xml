<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>DataCleaner</artifactId>
		<groupId>dk.eobjects.datacleaner</groupId>
		<version>1.5-SNAPSHOT</version>
	</parent>
	<modelVersion>4.0.0</modelVersion>
	<groupId>dk.eobjects.datacleaner</groupId>
	<artifactId>DataCleaner-packaging</artifactId>
	<packaging>pom</packaging>
	<name>DataCleaner-packaging</name>
	<dependencies>
		<dependency>
			<groupId>dk.eobjects.datacleaner</groupId>
			<artifactId>DataCleaner-gui</artifactId>
			<version>${project.version}</version>
			<exclusions>
				<!-- Replace the old looks jar with a new one (from the third party repository) -->
				<exclusion>
					<groupId>com.jgoodies</groupId>
					<artifactId>looks</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.jgoodies</groupId>
			<artifactId>looks</artifactId>
			<version>2.2.0</version>
		</dependency>
	</dependencies>
	<repositories>
		<repository>
			<!-- Used for the launch4j windows executable plugin -->
			<id>akathist-repository</id>
			<name>Akathist Repository</name>
			<url>http://www.9stmaryrd.com/maven</url>
		</repository>
		<repository>
			<!-- Used for updated versions of jgoodies and swinglabs jars -->
			<id>maven2-repository.dev.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>http://download.java.net/maven/2/</url>
			<layout>default</layout>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<!-- Used for the launch4j windows executable plugin -->
			<id>akathist-repository</id>
			<name>Akathist Repository</name>
			<url>http://www.9stmaryrd.com/maven</url>
		</pluginRepository>
	</pluginRepositories>
	<build>
		<finalName>datacleaner</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>jar-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>assembly</goal>
						</goals>
						<configuration>
							<descriptorRefs>
								<descriptorRef>
									jar-with-dependencies
								</descriptorRef>
							</descriptorRefs>
							<archive>
								<manifest>
									<mainClass>
										dk.eobjects.datacleaner.gui.DataCleanerGui
									</mainClass>
								</manifest>
							</archive>
							<outputDirectory>
								${project.build.directory}
							</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dist-files</id>
						<phase>package</phase>
						<configuration>
							<tasks>
								<copy file="datacleaner-config.xml" todir="target/dist" />
								<copy file="datacleaner-profiler-modules.xml" todir="target/dist" />
								<copy file="datacleaner-validator-modules.xml" todir="target/dist" />
								<copy file="datacleaner.sh" todir="target/dist" />
								<chmod file="target/dist/datacleaner.sh" perm="+x" />
								<copy file="datacleaner.cmd" todir="target/dist" />
								<copy todir="target/dist/samples">
									<fileset dir="samples">
										<exclude name="database.properties" />
										<exclude name="database.log" />
									</fileset>
								</copy>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<!-- Needs to run after 'gui-windows-executable' -->
					<execution>
						<id>package-downloadables</id>
						<phase>install</phase>
						<configuration>
							<tasks>
								<copy
									file="target/datacleaner-jar-with-dependencies.jar"
									tofile="target/dist/datacleaner.jar" />
								<zip
									destfile="target/dist/${project.name}-${project.version}-win32.zip">
									<fileset dir="target/dist">
										<include name="datacleaner-*.xml" />
										<include name="datacleaner.exe" />
										<include name="samples/**" />
									</fileset>
								</zip>
								<zip
									destfile="target/dist/${project.name}-${project.version}-all.zip">
									<fileset dir="target/dist">
										<include name="datacleaner-*.xml" />
										<include name="datacleaner.jar" />
										<include name="datacleaner.sh" />
										<include name="datacleaner.cmd" />
										<include name="samples/**" />
									</fileset>
								</zip>
								<tar
									destfile="target/dist/${project.name}-${project.version}-all.tar.gz"
									compression="gzip">
									<tarfileset dir="target/dist">
										<include name="datacleaner-*.xml" />
										<include name="datacleaner.jar" />
										<include name="datacleaner.sh" />
										<include name="datacleaner.cmd" />
										<include name="samples/**" />
									</tarfileset>
								</tar>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.akathist.maven.plugins.launch4j</groupId>
				<artifactId>launch4j-maven-plugin</artifactId>
				<executions>
					<execution>
						<!-- Needs to run after 'copy-dist-files' -->
						<id>gui-windows-executable</id>
						<phase>verify</phase>
						<goals>
							<goal>launch4j</goal>
						</goals>
						<configuration>
							<headerType>gui</headerType>
							<outfile>
								${project.build.directory}/dist/datacleaner.exe
							</outfile>
							<jar>
								${project.build.directory}/datacleaner-jar-with-dependencies.jar
							</jar>
							<errTitle>DataCleaner</errTitle>
							<icon>src/packaging/icon.ico</icon>
							<jre>
								<minVersion>1.5.0</minVersion>
								<maxHeapSize>1024</maxHeapSize>
								<opts>
									<opt>-XX:MaxPermSize=256m</opt>
								</opts>
							</jre>
							<splash>
								<file>src/packaging/splash.bmp</file>
								<waitForWindow>true</waitForWindow>
								<timeout>90</timeout>
								<timeoutErr>true</timeoutErr>
							</splash>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>